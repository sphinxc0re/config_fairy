
yes_or_no = { "yes" | "no" }


host_option = {
    add_keys_to_agent |
    address_family |
    batch_mode |
    bind_address
}

single_config = {
    host | match_ ~ host_option+
}

config_file = _{ soi ~ single_config* ~ eoi }

// Host
// Restricts the following declarations (up to the next Host or Match keyword) to be only for those hosts that match one of the patterns given after the keyword.  If more than
// one pattern is provided, they should be separated by whitespace.  A single `*' as a pattern can be used to provide global defaults for all hosts.  The host is usually the
// hostname argument given on the command line (see the CanonicalizeHostname keyword for exceptions).
//
// A pattern entry may be negated by prefixing it with an exclamation mark (`!').  If a negated entry is matched, then the Host entry is ignored, regardless of whether any other
// patterns on the line match.  Negated matches are therefore useful to provide exceptions for wildcard matches.
//
// See PATTERNS for more information on patterns.
host = { ^"Host" ~ pattern+ }

// Match
// Restricts the following declarations (up to the next Host or Match keyword) to be used only when the conditions following the Match keyword are satisfied.  Match conditions
// are specified using one or more criteria or the single token all which always matches.  The available criteria keywords are: canonical, exec, host, originalhost, user, and
// localuser.  The all criteria must appear alone or immediately after canonical.  Other criteria may be combined arbitrarily.  All criteria but all and canonical require an
// argument.  Criteria may be negated by prepending an exclamation mark (`!').
//
// The canonical keyword matches only when the configuration file is being re-parsed after hostname canonicalization (see the CanonicalizeHostname option.)  This may be useful
// to specify conditions that work with canonical host names only.  The exec keyword executes the specified command under the user's shell.  If the command returns a zero exit
// status then the condition is considered true.  Commands containing whitespace characters must be quoted.  Arguments to exec accept the tokens described in the TOKENS section.
//
// The other keywords' criteria must be single entries or comma-separated lists and may use the wildcard and negation operators described in the PATTERNS section.  The criteria
// for the host keyword are matched against the target hostname, after any substitution by the Hostname or CanonicalizeHostname options.  The originalhost keyword matches
// against the hostname as it was specified on the command-line.  The user keyword matches against the target username on the remote host.  The localuser keyword matches against
// the name of the local user running ssh(1) (this keyword may be useful in system-wide ssh_config files).
//
// NOTE: Since `match` is a Rust keyword we have to use an underscore at the end of this rule's name.
match_ = { ^"Match" ~ ((pattern ~ ",")* ~ pattern) }

// AddKeysToAgent
// Specifies whether keys should be automatically added to a running ssh-agent(1).  If this option is set to yes and a key is loaded from a file, the key and its passphrase are
// added to the agent with the default lifetime, as if by ssh-add(1).  If this option is set to ask, ssh(1) will require confirmation using the SSH_ASKPASS program before adding
// a key (see ssh-add(1) for details).  If this option is set to confirm, each use of the key must be confirmed, as if the -c option was specified to ssh-add(1).  If this option
// is set to no, no keys are added to the agent.  The argume
add_keys_to_agent = { ^"AddKeysToAgent" ~ yes_or_no | "confirm" | "ask" }

// AddressFamily
// Specifies which address family to use when connecting. Valid arguments are ''any'', ''inet'' (use IPv4 only), or ''inet6'' (use IPv6 only).
address_family = { ^"AddressFamily" ~ "any" | "inet" | "inet6" }

// BatchMode
// If set to ''yes'', passphrase/password querying will be disabled. This option is useful in scripts and other batch jobs where no user is present to supply the password. The argument must be ''yes'' or ''no''. The default is ''no''.
batch_mode = { ^"BatchMode" ~ yes_or_no }

// BindAddress
// Use the specified address on the local machine as the source address of the connection.  Only useful on systems with more than one address.  Note that this option does not
// work if UsePrivilegedPort is set to yes.
bind_address = { ^"BindAddress" ~ ip_address }

ip_address = { ipv4_address }

ipv4_address = { int ~ "." ~ int ~ "." ~ int ~ "." ~ int }

digit = @{ '0' .. '9' }
digit_woz = @{ '1' .. '9' }
int = ${ digit | digit_woz ~ digit+ }

pattern = ${ "!"? ~ (digit | 'a'..'z' | 'A'..'Z' | "-" | "_" | "." | "*")+ }

comment = _{ "#" ~ (!newline ~ any)* }
newline = _{ "\n" | "\r\n" }
whitespace = _{ " " | "\t" | newline }
